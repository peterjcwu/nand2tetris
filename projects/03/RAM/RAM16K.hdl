// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=true, sel=address[12..13], a=selA, b=selB, c=selC, d=selD);
    And(a=load, b=selA, out=loadA);
    And(a=load, b=selB, out=loadB);
    And(a=load, b=selC, out=loadC);
    And(a=load, b=selD, out=loadD);

    DMux4Way16(in=in, sel=address[12..13], a=a, b=b, c=c, d=d);
    RAM4K(in=a, load=loadA, address=address[0..11], out=aa);
    RAM4K(in=b, load=loadB, address=address[0..11], out=bb);
    RAM4K(in=c, load=loadC, address=address[0..11], out=cc);
    RAM4K(in=d, load=loadD, address=address[0..11], out=dd);
    
    Mux4Way16(a=aa, b=bb, c=cc, d=dd, sel=address[12..13], out=out);
}
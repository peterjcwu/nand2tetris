// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=selA, b=selB, c=selC, d=selD, e=selE, f=selF, g=selG, h=selH);
    And(a=load, b=selA, out=loadA);
    And(a=load, b=selB, out=loadB);
    And(a=load, b=selC, out=loadC);
    And(a=load, b=selD, out=loadD);
    And(a=load, b=selE, out=loadE);
    And(a=load, b=selF, out=loadF);
    And(a=load, b=selG, out=loadG);
    And(a=load, b=selH, out=loadH);

    DMux8Way16(in=in, sel=address[9..11], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM512(in=a, load=loadA, address=address[0..8], out=aa);
    RAM512(in=b, load=loadB, address=address[0..8], out=bb);
    RAM512(in=c, load=loadC, address=address[0..8], out=cc);
    RAM512(in=d, load=loadD, address=address[0..8], out=dd);
    RAM512(in=e, load=loadE, address=address[0..8], out=ee);
    RAM512(in=f, load=loadF, address=address[0..8], out=ff);
    RAM512(in=g, load=loadG, address=address[0..8], out=gg);
    RAM512(in=h, load=loadH, address=address[0..8], out=hh);
    
    Mux8Way16(a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh, sel=address[9..11], out=out);
}